<script runat="server">
     Platform.Load("Core","1");
         var api = new Script.Util.WSProxy();

    var allowedOrigin = [
        "https://playground.amp.dev",
        "https://amp.gmail.dev",
        "https://mail.google.com",
        "https://user-content.s10.sfmc-content.com"
    ];

    var sender = Platform.Request.GetRequestHeader("AMP-Email-Sender");
    var origin = Platform.Request.GetRequestHeader("Origin");
    var referer = Platform.Request.GetRequestHeader("Referer");
    var source = Platform.Request.GetQueryStringParameter("__amp_source_origin");

    try {

        if(!!inArray(allowedOrigin, origin)) {
            HTTPHeader.SetValue("Access-Control-Allow-Methods", "POST");
            HTTPHeader.SetValue("Access-Control-Allow-Origin", origin);
            HTTPHeader.SetValue("Content-Type", "application/json");
            HTTPHeader.SetValue("Access-Control-Expose-Headers", "AMP-Access-Control-Allow-Source-Origin");
            HTTPHeader.SetValue("AMP-Access-Control-Allow-Source-Origin", source);
            HTTPHeader.SetValue("Access-Control-Allow-Credentials", "true");
        } else {
            throw "Origin not allowed";
        }

        if(Platform.Request.Method == "POST") {

            var params = wsPack(parsePostJSON());
            var form = getData(prepareFormAnswers(params));

            var i = 0;
            var questions = null, question = null, answers = null, answer = null, QUI = null, AID = null, Content = null;
           var ContactKey = getContactKey(prepareFormAnswers(params));
           var today = new Date();
           var questions = form;
           for (var m = 0; m < questions.length; m++) {
               question = questions[m];
               QID = question.QID;
               answers = question.answers;
               for (var n = 0; n < answers.length; n++){
                   answer = answers[n];
                   AID = answer.AID;
                   Content = answer.Content;
                   var rows = Platform.Function.UpsertData("HDSKIN_CONTACT_QUESTION_ANSWER_1",["ContactKey","QID","AID"],[ContactKey,QID,AID],['Content','ModificationDate'],[Content,today]);
                   i = i + rows;
               }
           }

            if(i > 0) {
            
                var result = {
                    status: "ok",
                    message: "message",
                    details: "request"
                }
            
                Write(Stringify(result));
            
            } else {
                throw "error message";
            }

        } else {

          Write('REQUEST NOT SUPPORTED');

        }

    } catch(err) {

        Write(Stringify({
            status: "Error",
            message: err
        }));

    }

function getContactKey(obj) {
  var ContactKey = null;
  if(obj.ContactKey){ ContactKey = obj.ContactKey;}
  return ContactKey;
}

function getData(obj) {
  var data = null;
  if(obj.data){ data = obj.data;}
  return data;
}


 function prepareFormAnswers(answers){
    var answers = answers;
    var ContactKey = null;
    var answer = null, answerJson = [], answerArray = [];
    var Content = null;
    for(var i=0; i<answers.length;i++){
      answer = answers[i];
          if(answer.Name != "ContactKey"){
      var QID = answer.Name;
      var AID = answer.Value;
      if(answerJson[QID] && answerJson[QID].answers){
        answerJson[QID].answers.push({"AID":AID});
      }else{
        answerJson.push({"QID": QID, "answers":[{"AID":AID}]});
      }
    }else{
      ContactKey = answer.Value;
    }
    }
    for(var p in answerJson)
      {
        answerArray.push(answerJson[p]);
      }
    
    return { "ContactKey" : ContactKey, "data" : answerArray };
  }

    function parsePostJSON() {

        var o = {};

        var post = String(Platform.Request.GetPostData());

        var pairs = post.split("&");

        for(var i in pairs) {
            var pair = pairs[i];
            if(String(pair).indexOf("=") != -1) {
                var key = pair.split("=")[0];
                var val = pair.split("=")[1];
                o[key] = val;
            }
        }

        return o;
    }

    function wsPack(o) {

        var arr = [];

        for (var k in o) {
            arr.push({
                Name: k,
                Value: o[k]
            });
        }

        return arr;
    }

    function inArray(arr, k) {

        var b = false;

        for (var i in arr) {
            if (arr[i] == k) b = true;
        }

        return b;
    }
   </script>
